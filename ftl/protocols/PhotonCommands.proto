syntax = "proto3";

import "google/protobuf/any.proto";

package Photon.Commands;
option go_package = "photongo";

enum ProtocolVersion {
  NONE = 0;
  V1 = 1;
}

enum StatusCodes {
  UNKNOWN = 0;
  OK = 200;                   //used
  PING = 201;
  BAD_REQUEST = 400;          //used
  UNAUTHORIZED = 401;         //used
  OLD_VERSION = 402;
  NO_RESPONSE = 403;
  INVALID_STREAM_KEY = 406;     //used
  CHANNEL_IN_USE = 407;         //used
  REGION_UNSUPPORTED = 408;
  NO_MEDIA_TIMEOUT = 409;
  INTERNAL_SERVER_ERROR = 500;
  INTERNAL_COMMAND_ERROR = 501;
  INTERNAL_LOCAL_ERROR = 502;
}

enum DisconnectReasons {
  DISCONNECT_UNKNOWN = 0;
  CLIENT_CLEAN = 200;
  INGEST_CLEAN = 201;
  CLIENT_ERROR_UNKNOWN = 300;  
  CLIENT_ERROR_TIMEOUT = 301;
  CLIENT_ERROR_BAD_RESPONSE = 302;
  INGEST_ERROR_UNKNOWN = 400; 
  INGEST_ERROR_TIMEOUT = 401;
}

message PhotonWrapper
{
  StatusCodes StatusCode = 1;
  google.protobuf.Any Command = 15;
}

message Connect 
{
  ProtocolVersion ClientProtocolVersion = 1;
}

message Connect_Response 
{
  ProtocolVersion ServerProtocolVersion = 1;
  string TelemetryId = 2;
  string HmacKey = 3;
}

message Authenticate 
{
  uint32 ChannelId = 1;
  string AuthKey = 2;
}

message Authenticate_Response
{ }

message StartStream
{
  string VendorName = 1;
  string VendorVersion = 2;

  // Video Params
  bool HasVideo = 10;
  string VideoCodec = 11;
  uint32 VideoHeight = 12;
  uint32 VideoWidth = 13;
  uint32 VideoPayloadType = 14;
  uint32 VideoIngestSSRC = 15;

  // Audio Params
  bool HasAudio = 30;
  string AudioCodec = 31;
  uint32 AudioPayloadType = 32;
  uint32 AudioIngestSSRC = 33;
}

message StreamStart_Response
{
  uint32 IngestPort = 1;
}

message Heartbeat
{  
}

message Heartbeat_Response
{
}

message Disconnect
{
  DisconnectReasons Reason = 1;
}

